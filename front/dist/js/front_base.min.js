function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthHover()},FrontBase.prototype.listenAuthHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){this.listenShowHideEvent(),this.listenSwitchEvent(),this.listenSigninEvent(),this.listenSignupEvent(),this.listenImageCaptchaEvent(),this.listentSmsCaptchaEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),a.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var a=this;$(".switch").click(function(){var t=a.scrollWrapper.width(),n=parseFloat(t)/2,e=a.scrollWrapper.css("left");(e=parseFloat(e))<0?a.scrollWrapper.animate({left:0},500):a.scrollWrapper.animate({left:-n},500)})},Auth.prototype.listenImageCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled");var n=60;t.smsCaptcha.unbind();var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listentSmsCaptchaEvent())},1e3)},Auth.prototype.listentSmsCaptchaEvent=function(){var n=this,e=$(".signup-group input[name='telephone']");n.smsCaptcha.click(function(){var t=e.val();t||messageBox.showInfo("请输入手机号码"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200===t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSigninEvent=function(){var a=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),i=t.find("input[name='password']"),o=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=s.val(),n=i.val(),e=o.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){a.hideEvent(),window.location.reload()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSignupEvent=function(){var t=$(".signup-group"),c=t.find("input[name='telephone']"),r=t.find("input[name='username']"),p=t.find("input[name='img_captcha']"),u=t.find("input[name='password1']"),l=t.find("input[name='password2']"),h=t.find("input[name='sms_captcha']");t.find(".submit-btn").click(function(t){t.preventDefault();var n=c.val(),e=r.val(),a=p.val(),s=u.val(),i=l.val(),o=h.val();xfzajax.post({url:"/account/register/",data:{telephone:n,username:e,img_captcha:a,password1:s,password2:i,sms_captcha:o},success:function(t){200===t.code&&window.location.reload()},fail:function(t){console.log(t)}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),a=((new Date).getTime()-e)/1e3;return a<60?"刚刚":60<=a&&a<3600?(minutes=parseInt(a/60),minutes+"分钟前"):3600<=a&&a<86400?(hours=parseInt(a/60/60),hours+"小时前"):86400<=a&&a<2592e3?(days=parseInt(a/60/60/24),days+"天前"):n.getFullYear()+"/"+(n.getMonth()+1)+"/"+n.getDay()+"/ "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
