function Banner(){this.bannergroup=$("#banner-group"),this.timer=null,this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$("#banner-ul"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.bannerWidth=798,this.pageControl=$(".page-control")}function Index(){this.page=2,this.category_id=0,this.loadMoreBtn=$("#load-more-btn")}Banner.prototype.initBanner=function(){var n=this.liList.eq(0).clone(!0),t=this.liList.eq(this.bannerCount-1).clone(!0);this.bannerUl.append(n),this.bannerUl.prepend(t),this.bannerUl.css({width:this.bannerWidth*(this.bannerCount+2),left:-this.bannerWidth})},Banner.prototype.initControl=function(){for(var n=0;n<this.bannerCount;n++){var t=$("<li></li>");this.pageControl.append(t),0===n&&t.addClass("active")}this.pageControl.css({width:12*this.bannerCount+16+16*(this.bannerCount-1)})},Banner.prototype.toggleArrow=function(){this.leftArrow.toggle(),this.rightArrow.toggle()},Banner.prototype.run=function(){this.loop(),this.listenArrowClick(),this.initControl(),this.initBanner(),this.listenPageControl(),this.listenBannerHover()},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenPageControl=function(){var e=this;this.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate()})})},Banner.prototype.animate=function(){this.bannerUl.stop().animate({left:-798*this.index},500);var n=this.index;n=0===n?this.bannerCount-1:n===this.bannerCount+1?0:this.index-1,this.pageControl.children("li").eq(n).addClass("active").siblings().removeClass("active")},Banner.prototype.listenArrowClick=function(){var n=this;this.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerCount*n.bannerWidth}),n.index=n.bannerCount-1):n.index--,n.animate()}),this.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannergroup.hover(function(){clearInterval(n.timer),n.toggleArrow()},function(){n.loop(),n.toggleArrow()})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},Index.prototype.listenLoadMoreEvent=function(){var i=this;this.loadMoreBtn.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),i.page+=1}else i.loadMoreBtn.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var a=this;$(".list-tab").on("click","li",function(){var r=$(this),o=r.attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:o,p:1},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),a.page=2,a.category_id=o,r.addClass("active").siblings().removeClass("active"),a.loadMoreBtn.show()}}})})},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
